/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/

body {
    font-family: "Lato", sans-serif;
    font-weight: 400;
    font-size: 16px;
    line-height: 1.7;
    color: #777;
    padding: 30px;
}

.header {
    position: relative;
    height: 95vh;
    background-image: linear-gradient(to right,
    rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8)),
     url(../img/hero.jpg);
    background-size: cover; /* fit element inside box */
    background-position: top; /* top of the image stays at top of element during resizing also can be center and bottom */
    clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%)
}

.logo-box {
    position: absolute;
    top: 40px;
    left: 40px;
}

.logo {
    height: 35px;
}

.text-box {
   position: absolute;
   top: 40%;
   left: 50%;
   transform: translate(-50%, -50%);
   text-align: center;
   /* display: flex;
   flex-direction: column;
   gap: 15px;
   align-content: center; */
}

.heading-primary {
    color: #fff;
    text-transform: uppercase;
    backface-visibility: hidden; /*to fix shaking animation (used if neccesary) */
    
}

.heading-primary-main {
    display: block;  /*block elements occupy 100% available width and has <br> at the end */
    font-size: 60px;
    font-weight: 400;
    letter-spacing: 30px;
    margin-right: -30px;
    animation-name: moveInLeft;
    animation-duration: 1s;
    animation-timing-function: ease-out;
    text-align: center;
    
    /* animation: moveInLeft 1s ease-out; */
    /* animation-delay: 3s; */
    /* animation-iteration-count: 3; */

}

.heading-primary-sub {
    /* display: block; block elements occupy 100% available width and has <br> at the end */
    display: block;
    font-size: 20px;
    font-weight: 700;
    letter-spacing: 16px;
    margin-right: -16px;
    animation: moveInRight 1s ease-out;
}

/* for performance it's best idea to animate two properties */
@keyframes moveInLeft {
    0% {
        opacity: 0;
        transform: translateX(-100px);
    }

    80% {
        transform: translateX(10px);
    }

    100% {
        opacity: 1;
        transform: translateX(0);
    }
}

@keyframes moveInRight {
    0% {
        opacity: 0;
        transform: translateX(100px);
    }

    80% {
        transform: translateX(-10px);
    }

    100% {
        opacity: 1;
        transform: translateX(0);
    }
}

@keyframes moveInBottom {
    0% {
        opacity: 0;
        transform: translateY(30px);
    }

    100% {
        opacity: 1;
        transform: translateY(0);
    }
}

.btn:link, 
.btn:visited {
    text-transform: uppercase;
    text-decoration: none;
    padding: 15px 40px;
    display: inline-block;
    border-radius: 100px;
    transition: all .2s; /* all positions are enable to animate */
    position: relative; /*because we want to position .btn::after in relate to this element */
}

.btn:hover {
    transform: translateY(-3px);
    box-shadow: 0 10px 20px rgba(0,0,0,.2); 

}

.btn:active {
    transform: translateY(-1px);
    box-shadow: 0 5px 10px rgba(0,0,0,.2); 
}

.btn-white {
    background-color: #fff;
    color: #777
}

/* ::after elemtn is behind original element */
.btn::after {
    content: "";
    display: inline-block;
    height: 100%;
    width: 100%;
    border-radius: 100px;
    position:absolute;
    top: 0;
    left: 0;
    z-index: -1;
    transition: all .4s;
}

.btn-white::after {
    background-color: #fff;
}

/* we want to see after element only when hover on original element */
.btn:hover::after {
    transform: scaleX(1.4) scaleY(1.6);
    opacity: 0;
}

.btn-animated {
animation: moveInBottom .5s ease-out .75s; /*last property is delay of start */
animation-fill-mode: backwards; /* set initial state of animation*/
}